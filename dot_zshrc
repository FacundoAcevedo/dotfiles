PATH=${KREW_ROOT:-$HOME/.krew}/bin:${ASDF_DATA_DIR:-$HOME/.asdf}/shims:$HOME/go/bin:~/.local/bin:$HOME/.cargo/bin:$PATH


# Set the directory we want to store zinit and plugins and install zinit if needed
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"

# Load zinit
if [[ -e "${ZINIT_HOME}" ]]; then
  source "${ZINIT_HOME}/zinit.zsh" \
    && autoload -Uz _zinit \
    && (( ${+_comps} )) \
    && _comps[zinit]=_zinit
else echo "unable to find 'zinit.zsh'" && return 1
fi

### Exports
export EDITOR=vim
export TERMINAL=kitty

### Add in zsh plugins

## fzf-tab should be loaded before autosuggestions and fast-syntax-highlighting
## but after compinit
autoload -U compinit; compinit
zinit light-mode for \
    spaceship-prompt/spaceship-prompt \
    Aloxaf/fzf-tab \
    CJ-Systems/gitflow-cjs \
    joshskidmore/zsh-fzf-history-search

zinit wait lucid for \
 atinit"ZINIT[COMPINIT_OPTS]=-C; zpcompinit; zpcdreplay" \
    zdharma/fast-syntax-highlighting \
 atload"!_zsh_autosuggest_start" \
    zsh-users/zsh-autosuggestions \
 blockf \
    zsh-users/zsh-completions
#zinit light zdharma-continuum/fast-syntax-highlighting
#zinit light zsh-users/zsh-autosuggestions
#zinit light zsh-users/zsh-completions


# disable sort when completing `git checkout`
zstyle ':completion:*:git-checkout:*' sort false
# set descriptions format to enable group support
# NOTE: don't use escape sequences (like '%F{red}%d%f') here, fzf-tab will ignore them
zstyle ':completion:*:descriptions' format '[%d]'
# set list-colors to enable filename colorizing
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# force zsh not to show completion menu, which allows fzf-tab to capture the unambiguous prefix
zstyle ':completion:*' menu no
# preview directory's content with eza when completing cd
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath'
# custom fzf flags
# NOTE: fzf-tab does not follow FZF_DEFAULT_OPTS by default
zstyle ':fzf-tab:*' fzf-flags --color=fg:1,fg+:2 --bind=tab:accept
# To make fzf-tab follow FZF_DEFAULT_OPTS.
# NOTE: This may lead to unexpected behavior since some flags break this plugin. See Aloxaf/fzf-tab#455.
zstyle ':fzf-tab:*' use-fzf-default-opts yes
# switch group using `<` and `>`
zstyle ':fzf-tab:*' switch-group '<' '>'
# Enable tmux popup feature for fzf-tab
zstyle ':fzf-tab:*' fzf-command ftb-tmux-popup
# Enable verbose mode for completion descriptions
zstyle ':completion:*' verbose yes
# List directories first in completion results
zstyle ':completion:*' list-dirs-first true
# Preview directory contents with `ls` when completing `cd` commands
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'
# Preview directory contents with `ls` when using zoxide completions
zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'ls --color $realpath'


### Keybindings
bindkey -e
bindkey '^p' history-search-backward
bindkey '^n' history-search-forward
bindkey '^[w' kill-region
## Fix some keys not working in my keyboard
bindkey "^[[3~" delete-char
bindkey "^[[4~" end-of-line
bindkey "^[[1~" beginning-of-line

### History
HISTSIZE=5000
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

### Aliases
alias ls='ls --color'
alias ll="ls --color -l"
alias l="ll"
alias la="ls --color -l -a"
alias vim='nvim'
alias vissh='vim ~/.ssh/config'
alias vizsh='vim ~/.zshrc'
alias ts='tailscale status'
alias dquilt="quilt --quiltrc=${HOME}/.quiltrc-dpkg"

### Oneliners
getcert() { true | openssl s_client -connect "$1:443" -servername "$1" | openssl x509; }
dumpcert() { true | openssl s_client -connect "$1:443" -servername "$1" | openssl x509 > "${1//[^a-Z0-9.-]}.cer"; }


# Rust env
source $HOME/.cargo/env

# Shell integrations
eval "$(zoxide init zsh)"

### Autoloads
autoload -Uz edit-command-line
zle -N edit-command-line
bindkey "^X^E" edit-command-line
