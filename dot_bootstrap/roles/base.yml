---
# Opensuse
- name: Make zypper to use GeoIP mirrors
  ansible.builtin.lineinfile:
    path: /etc/zypp/zypp.conf
    regex: ^## download\.use_geoip_mirror = true
    line: download.use_geoip_mirror = true
  become: true
  when: ansible_distribution == 'SLES'
  tags: base

# Fedora
- name: Tune dnf.conf
  ansible.builtin.lineinfile:
    path: /etc/dnf/dnf.conf
    line: "{{ item }}"
    insertafter: "[main]"
  loop: [fastestmirror=True, max_parallel_downloads=10, deltarpm=true]
  become: true
  when: ansible_distribution == 'Fedora'
  tags: base
- name: Install base applications
  ansible.builtin.package:
    name: "{{ base_packages }}"
    state: present
  become: true
  tags: base
- name: Remove unnedded apps
  ansible.builtin.package:
    name: "{{ base_remove_packages }}"
    state: absent
  become: true
  tags: base

# https://wiki.archlinux.org/title/Zram#Optimizing_swap_on_zram
- name: Add zram optimization options to the kernel
  ansible.builtin.blockinfile:
    path: /etc/sysctl.d/99-vm-zram-parameters.conf
    block: |
      vm.swappiness = 180
      vm.watermark_boost_factor = 0
      vm.watermark_scale_factor = 125
      vm.page-cluster = 0
    create: true
    owner: root
    group: root
    mode: "0644"
  become: true
  tags: base
- name: Enable zram
  ansible.builtin.systemd:
    name: zramswap
    state: started
    enabled: true
  become: true
  tags: base
  when: ansible_distribution != 'Fedora'
- name: Set timezone
  community.general.timezone:
    name: "{{ timezone.name }}"
    hwclock: "{{ timezone.hwclock }}"
  register: should_reboot
  become: true
  tags: base
- name: Start and enable firewalld
  ansible.builtin.systemd:
    name: firewalld
    state: started
    enabled: true
  become: true
  tags: base
- name: Add the flathub flatpak repository remote to the user installation
  community.general.flatpak_remote:
    name: flathub
    state: present
    flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
    method: user
  become: false
- name: Install flatpak pacakges current user
  community.general.flatpak:
    name: "{{ base_flatpak_packages }}"
    state: present
    method: user
  become: false
- name: Install hw-probe service and timer
  ansible.builtin.copy:
    src: files/hw-probe/{{ item }}
    dest: /etc/systemd/system/{{ item }}
    owner: root
    group: root
    mode: "0755"
  loop: [hw-probe.service, hw-probe.timer]
  become: true
- name: Enable hw-probe timer
  ansible.builtin.systemd_service:
    state: started
    enabled: true
    daemon_reload: true
    name: hw-probe.timer
  become: true
- name: Install hardened OpenSSH configuration
  ansible.builtin.copy:
    src: files/openssh/sshd_config
    dest: /etc/ssh/sshd_config.d/*.conf
    owner: root
    group: root
    mode: "0600"
  become: true
- name: Run ssh configuration test
  ansible.builtin.command: sshd -T -q
  ignore_errors: true
  register: ssh_test_result
  become: true
  changed_when: false
- name: Check the result
  ansible.builtin.fail:
    msg: OpenSSH configuration test failed. Check the configuration file.
  when: "'Bad configuration' in ssh_test_result.stderr"
- name: Set neovim as alternative to vim/vi
  community.general.alternatives:
    name: "{{ item }}"
    path: /usr/bin/nvim
    link: /usr/bin/{{ item }}
    state: selected
  loop: [vi, vim]
  become: true
  tags: base
